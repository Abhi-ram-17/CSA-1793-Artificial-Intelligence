def print_board(board):
    for row in board:
        print(" ".join(row))
    print("\n")

def is_valid(board, row, col):
    # Check if there is a queen in the same column
    for i in range(row):
        if board[i][col] == "Q":
            return False

    # Check diagonals
    i, j = row, col
    while i >= 0 and j >= 0:
        if board[i][j] == "Q":
            return False
        i -= 1
        j -= 1

    i, j = row, col
    while i >= 0 and j < len(board):
        if board[i][j] == "Q":
            return False
        i -= 1
        j += 1

    return True

def solve(board, row):
    if row == len(board):
        print_board(board)
        return

    for col in range(len(board)):
        if is_valid(board, row, col):
            board[row][col] = "Q"
            solve(board, row + 1)
            board[row][col] = "."

board = [["." for x in range(8)] for y in range(8)]
solve(board, 0)
